" Neovim specifics
"
if has('nvim') | let &viminfo .= '.nvim' | endif

" 1. OS specific

if ($OS == 'Windows_NT')
    set viminfo='10,\"100,:20,%,n$VIM/_viminfo
    set shell=c:\Windows\system32\cmd.exe
    set shellcmdflag=/c
    au GUIEnter * simalt ~x
else
   set viminfo='10,\"100,:20,%,n~/.viminfo
   set shell=/bin/bash
endif

" 2. Generic settings
filetype off
syntax on
set nobackup
set nowritebackup
set noswapfile
set nocompatible " Use Vim defaults (much better!), Vi is for 70's programmers!
set ts=4 " tabstop - how many columns should the cursor move for one tab
set sw=4 " shiftwidth - how many columns should the text be indented
set expandtab " always expands tab to spaces. It is good when peers use different editor.
set wrap " wraps longs lines to screen size
set laststatus=2 " Show the status line even if only one file is being edited
set ruler " Show ruler
set go-=T " Removes the toolbar
" Make command line two lines high
set ch=2

" 3. Plugin setup
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()"

Plugin 'VundleVim/Vundle.vim'
Plugin 'doums/darcula'

call vundle#end()
filetype plugin indent on

" 4. Plugin settings
colorscheme darcula
set termguicolors

" 5. Cursor settings
highlight Cursor guifg=white guibg=grey
highlight iCursor guifg=white guibg=steelblue
set guicursor=n-v-c:block-Cursor
set guicursor+=i:ver100-iCursor
set guicursor+=n-v-c:blinkon0
set guicursor+=i:blinkwait10

" 6. Working with split windows and tabs
    " 6.1 Working with tabs
    "~~~~~~~~~~~~~~~~~~~~~~~
    "
if version >= 700
    " always enable Vim tabs
    set showtabline=2
    " set tab features just like browser
    " open tab, close tab, next tab, previous tab (just like Chrome and Firefox keyboard shortcuts)
  map <C-t> <Esc>:tabnew<CR>
  map <C-F4> <Esc>:tabclose<CR>
  map <A-Right> <Esc>:tabnext<CR>
  map <A-Left> <Esc>:tabprev<CR>
endif

" 6.2 Working with windows 
"~~~~~~~~~~~~~~~~~~~~~~~
" Switch between splits very fast (for multi-file editing) by maximizing target split - http://vim.wikia.com/wiki/VimTip173
map <C-J> <C-W>j<C-W>_
map <C-K> <C-W>k<C-W>_
map <C-H> <C-W>h<C-W>|
map <C-L> <C-W>l<C-W>|
map <C-=> <C-W>=
